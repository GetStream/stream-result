[{"name":"abstract fun <T : Any> fromJson(raw: String): T","description":"io.getstream.result.call.retrofit.ErrorParser.fromJson","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-error-parser/from-json.html","searchKeys":["fromJson","abstract fun <T : Any> fromJson(raw: String): T","io.getstream.result.call.retrofit.ErrorParser.fromJson"]},{"name":"class RetrofitCall<T : Any>(call: Call<T>, errorParser: ErrorParser<*>, scope: CoroutineScope) : Call<T> ","description":"io.getstream.result.call.retrofit.RetrofitCall","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call/index.html","searchKeys":["RetrofitCall","class RetrofitCall<T : Any>(call: Call<T>, errorParser: ErrorParser<*>, scope: CoroutineScope) : Call<T> ","io.getstream.result.call.retrofit.RetrofitCall"]},{"name":"class RetrofitCallAdapterFactory : CallAdapter.Factory","description":"io.getstream.result.call.retrofit.RetrofitCallAdapterFactory","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call-adapter-factory/index.html","searchKeys":["RetrofitCallAdapterFactory","class RetrofitCallAdapterFactory : CallAdapter.Factory","io.getstream.result.call.retrofit.RetrofitCallAdapterFactory"]},{"name":"constructor(call: Call<T>, errorParser: ErrorParser<*>, scope: CoroutineScope)","description":"io.getstream.result.call.retrofit.RetrofitCall.RetrofitCall","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call/-retrofit-call.html","searchKeys":["RetrofitCall","constructor(call: Call<T>, errorParser: ErrorParser<*>, scope: CoroutineScope)","io.getstream.result.call.retrofit.RetrofitCall.RetrofitCall"]},{"name":"fun create(coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO), errorParser: ErrorParser<*> = DefaultErrorParser()): RetrofitCallAdapterFactory","description":"io.getstream.result.call.retrofit.RetrofitCallAdapterFactory.Companion.create","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call-adapter-factory/-companion/create.html","searchKeys":["create","fun create(coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO), errorParser: ErrorParser<*> = DefaultErrorParser()): RetrofitCallAdapterFactory","io.getstream.result.call.retrofit.RetrofitCallAdapterFactory.Companion.create"]},{"name":"interface ErrorParser<T>","description":"io.getstream.result.call.retrofit.ErrorParser","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-error-parser/index.html","searchKeys":["ErrorParser","interface ErrorParser<T>","io.getstream.result.call.retrofit.ErrorParser"]},{"name":"object Companion","description":"io.getstream.result.call.retrofit.RetrofitCallAdapterFactory.Companion","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call-adapter-factory/-companion/index.html","searchKeys":["Companion","object Companion","io.getstream.result.call.retrofit.RetrofitCallAdapterFactory.Companion"]},{"name":"open fun toError(errorResponseBody: ResponseBody): StreamError","description":"io.getstream.result.call.retrofit.ErrorParser.toError","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-error-parser/to-error.html","searchKeys":["toError","open fun toError(errorResponseBody: ResponseBody): StreamError","io.getstream.result.call.retrofit.ErrorParser.toError"]},{"name":"open fun toError(okHttpResponse: Response): StreamError","description":"io.getstream.result.call.retrofit.ErrorParser.toError","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-error-parser/to-error.html","searchKeys":["toError","open fun toError(okHttpResponse: Response): StreamError","io.getstream.result.call.retrofit.ErrorParser.toError"]},{"name":"open operator override fun get(returnType: Type, annotations: Array<out Annotation>, retrofit: Retrofit): CallAdapter<*, *>?","description":"io.getstream.result.call.retrofit.RetrofitCallAdapterFactory.get","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call-adapter-factory/get.html","searchKeys":["get","open operator override fun get(returnType: Type, annotations: Array<out Annotation>, retrofit: Retrofit): CallAdapter<*, *>?","io.getstream.result.call.retrofit.RetrofitCallAdapterFactory.get"]},{"name":"open override fun cancel()","description":"io.getstream.result.call.retrofit.RetrofitCall.cancel","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call/cancel.html","searchKeys":["cancel","open override fun cancel()","io.getstream.result.call.retrofit.RetrofitCall.cancel"]},{"name":"open override fun enqueue(callback: Call.Callback<T>)","description":"io.getstream.result.call.retrofit.RetrofitCall.enqueue","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call/enqueue.html","searchKeys":["enqueue","open override fun enqueue(callback: Call.Callback<T>)","io.getstream.result.call.retrofit.RetrofitCall.enqueue"]},{"name":"open override fun execute(): Result<T>","description":"io.getstream.result.call.retrofit.RetrofitCall.execute","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call/execute.html","searchKeys":["execute","open override fun execute(): Result<T>","io.getstream.result.call.retrofit.RetrofitCall.execute"]},{"name":"open suspend override fun await(): Result<T>","description":"io.getstream.result.call.retrofit.RetrofitCall.await","location":"stream-result-call-retrofit/io.getstream.result.call.retrofit/-retrofit-call/await.html","searchKeys":["await","open suspend override fun await(): Result<T>","io.getstream.result.call.retrofit.RetrofitCall.await"]},{"name":"abstract fun cancel()","description":"io.getstream.result.call.Call.cancel","location":"stream-result-call/io.getstream.result.call/-call/cancel.html","searchKeys":["cancel","abstract fun cancel()","io.getstream.result.call.Call.cancel"]},{"name":"abstract fun enqueue(callback: Call.Callback<T>)","description":"io.getstream.result.call.Call.enqueue","location":"stream-result-call/io.getstream.result.call/-call/enqueue.html","searchKeys":["enqueue","abstract fun enqueue(callback: Call.Callback<T>)","io.getstream.result.call.Call.enqueue"]},{"name":"abstract fun execute(): Result<T>","description":"io.getstream.result.call.Call.execute","location":"stream-result-call/io.getstream.result.call/-call/execute.html","searchKeys":["execute","abstract fun execute(): Result<T>","io.getstream.result.call.Call.execute"]},{"name":"abstract fun onResult(result: Result<T>)","description":"io.getstream.result.call.Call.Callback.onResult","location":"stream-result-call/io.getstream.result.call/-call/-callback/on-result.html","searchKeys":["onResult","abstract fun onResult(result: Result<T>)","io.getstream.result.call.Call.Callback.onResult"]},{"name":"abstract fun retryTimeout(attempt: Int, error: StreamError): Int","description":"io.getstream.result.call.retry.RetryPolicy.retryTimeout","location":"stream-result-call/io.getstream.result.call.retry/-retry-policy/retry-timeout.html","searchKeys":["retryTimeout","abstract fun retryTimeout(attempt: Int, error: StreamError): Int","io.getstream.result.call.retry.RetryPolicy.retryTimeout"]},{"name":"abstract fun shouldRetry(attempt: Int, error: StreamError): Boolean","description":"io.getstream.result.call.retry.RetryPolicy.shouldRetry","location":"stream-result-call/io.getstream.result.call.retry/-retry-policy/should-retry.html","searchKeys":["shouldRetry","abstract fun shouldRetry(attempt: Int, error: StreamError): Boolean","io.getstream.result.call.retry.RetryPolicy.shouldRetry"]},{"name":"abstract suspend fun await(): Result<T>","description":"io.getstream.result.call.Call.await","location":"stream-result-call/io.getstream.result.call/-call/await.html","searchKeys":["await","abstract suspend fun await(): Result<T>","io.getstream.result.call.Call.await"]},{"name":"class CoroutineCall<T : Any>(scope: CoroutineScope, suspendingTask: suspend CoroutineScope.() -> Result<T>) : Call<T> ","description":"io.getstream.result.call.CoroutineCall","location":"stream-result-call/io.getstream.result.call/-coroutine-call/index.html","searchKeys":["CoroutineCall","class CoroutineCall<T : Any>(scope: CoroutineScope, suspendingTask: suspend CoroutineScope.() -> Result<T>) : Call<T> ","io.getstream.result.call.CoroutineCall"]},{"name":"class DistinctCall<T : Any>(scope: CoroutineScope, callBuilder: () -> Call<T>, onFinished: () -> Unit) : Call<T> ","description":"io.getstream.result.call.DistinctCall","location":"stream-result-call/io.getstream.result.call/-distinct-call/index.html","searchKeys":["DistinctCall","class DistinctCall<T : Any>(scope: CoroutineScope, callBuilder: () -> Call<T>, onFinished: () -> Unit) : Call<T> ","io.getstream.result.call.DistinctCall"]},{"name":"class ReturnOnErrorCall<T : Any>(originalCall: Call<T>, scope: CoroutineScope, onErrorReturn: suspend (originalError: StreamError) -> Result<T>) : Call<T> ","description":"io.getstream.result.call.ReturnOnErrorCall","location":"stream-result-call/io.getstream.result.call/-return-on-error-call/index.html","searchKeys":["ReturnOnErrorCall","class ReturnOnErrorCall<T : Any>(originalCall: Call<T>, scope: CoroutineScope, onErrorReturn: suspend (originalError: StreamError) -> Result<T>) : Call<T> ","io.getstream.result.call.ReturnOnErrorCall"]},{"name":"class SharedCalls : CoroutineContext.Element","description":"io.getstream.result.call.SharedCalls","location":"stream-result-call/io.getstream.result.call/-shared-calls/index.html","searchKeys":["SharedCalls","class SharedCalls : CoroutineContext.Element","io.getstream.result.call.SharedCalls"]},{"name":"constructor()","description":"io.getstream.result.call.SharedCalls.SharedCalls","location":"stream-result-call/io.getstream.result.call/-shared-calls/-shared-calls.html","searchKeys":["SharedCalls","constructor()","io.getstream.result.call.SharedCalls.SharedCalls"]},{"name":"constructor(originalCall: Call<T>, scope: CoroutineScope, onErrorReturn: suspend (originalError: StreamError) -> Result<T>)","description":"io.getstream.result.call.ReturnOnErrorCall.ReturnOnErrorCall","location":"stream-result-call/io.getstream.result.call/-return-on-error-call/-return-on-error-call.html","searchKeys":["ReturnOnErrorCall","constructor(originalCall: Call<T>, scope: CoroutineScope, onErrorReturn: suspend (originalError: StreamError) -> Result<T>)","io.getstream.result.call.ReturnOnErrorCall.ReturnOnErrorCall"]},{"name":"constructor(scope: CoroutineScope, callBuilder: () -> Call<T>, onFinished: () -> Unit)","description":"io.getstream.result.call.DistinctCall.DistinctCall","location":"stream-result-call/io.getstream.result.call/-distinct-call/-distinct-call.html","searchKeys":["DistinctCall","constructor(scope: CoroutineScope, callBuilder: () -> Call<T>, onFinished: () -> Unit)","io.getstream.result.call.DistinctCall.DistinctCall"]},{"name":"constructor(scope: CoroutineScope, suspendingTask: suspend CoroutineScope.() -> Result<T>)","description":"io.getstream.result.call.CoroutineCall.CoroutineCall","location":"stream-result-call/io.getstream.result.call/-coroutine-call/-coroutine-call.html","searchKeys":["CoroutineCall","constructor(scope: CoroutineScope, suspendingTask: suspend CoroutineScope.() -> Result<T>)","io.getstream.result.call.CoroutineCall.CoroutineCall"]},{"name":"fun <T : Any, K : Any> Call<T>.map(mapper: (T) -> K): Call<K>","description":"io.getstream.result.call.map","location":"stream-result-call/io.getstream.result.call/map.html","searchKeys":["map","fun <T : Any, K : Any> Call<T>.map(mapper: (T) -> K): Call<K>","io.getstream.result.call.map"]},{"name":"fun <T : Any, K : Any> Call<T>.zipWith(call: Call<K>): Call<Pair<T, K>>","description":"io.getstream.result.call.zipWith","location":"stream-result-call/io.getstream.result.call/zip-with.html","searchKeys":["zipWith","fun <T : Any, K : Any> Call<T>.zipWith(call: Call<K>): Call<Pair<T, K>>","io.getstream.result.call.zipWith"]},{"name":"fun <T : Any> Call<T>.doOnResult(scope: CoroutineScope, function: suspend (Result<T>) -> Unit): Call<T>","description":"io.getstream.result.call.doOnResult","location":"stream-result-call/io.getstream.result.call/do-on-result.html","searchKeys":["doOnResult","fun <T : Any> Call<T>.doOnResult(scope: CoroutineScope, function: suspend (Result<T>) -> Unit): Call<T>","io.getstream.result.call.doOnResult"]},{"name":"fun <T : Any> Call<T>.doOnStart(scope: CoroutineScope, function: suspend () -> Unit): Call<T>","description":"io.getstream.result.call.doOnStart","location":"stream-result-call/io.getstream.result.call/do-on-start.html","searchKeys":["doOnStart","fun <T : Any> Call<T>.doOnStart(scope: CoroutineScope, function: suspend () -> Unit): Call<T>","io.getstream.result.call.doOnStart"]},{"name":"fun <T : Any> Call<T>.enqueue(onSuccess: (T) -> Unit = onSuccessStub, onError: (StreamError) -> Unit = onErrorStub)","description":"io.getstream.result.call.enqueue","location":"stream-result-call/io.getstream.result.call/enqueue.html","searchKeys":["enqueue","fun <T : Any> Call<T>.enqueue(onSuccess: (T) -> Unit = onSuccessStub, onError: (StreamError) -> Unit = onErrorStub)","io.getstream.result.call.enqueue"]},{"name":"fun <T : Any> Call<T>.forceNewRequest(): Call<T>","description":"io.getstream.result.call.forceNewRequest","location":"stream-result-call/io.getstream.result.call/force-new-request.html","searchKeys":["forceNewRequest","fun <T : Any> Call<T>.forceNewRequest(): Call<T>","io.getstream.result.call.forceNewRequest"]},{"name":"fun <T : Any> Call<T>.launch(scope: CoroutineScope)","description":"io.getstream.result.call.launch","location":"stream-result-call/io.getstream.result.call/launch.html","searchKeys":["launch","fun <T : Any> Call<T>.launch(scope: CoroutineScope)","io.getstream.result.call.launch"]},{"name":"fun <T : Any> Call<T>.onErrorReturn(scope: CoroutineScope, function: suspend (originalError: StreamError) -> Result<T>): ReturnOnErrorCall<T>","description":"io.getstream.result.call.onErrorReturn","location":"stream-result-call/io.getstream.result.call/on-error-return.html","searchKeys":["onErrorReturn","fun <T : Any> Call<T>.onErrorReturn(scope: CoroutineScope, function: suspend (originalError: StreamError) -> Result<T>): ReturnOnErrorCall<T>","io.getstream.result.call.onErrorReturn"]},{"name":"fun <T : Any> Call<T>.retry(scope: CoroutineScope, retryPolicy: RetryPolicy): Call<T>","description":"io.getstream.result.call.retry","location":"stream-result-call/io.getstream.result.call/retry.html","searchKeys":["retry","fun <T : Any> Call<T>.retry(scope: CoroutineScope, retryPolicy: RetryPolicy): Call<T>","io.getstream.result.call.retry"]},{"name":"fun <T : Any> Call<T>.share(scope: CoroutineScope, identifier: () -> Int): Call<T>","description":"io.getstream.result.call.share","location":"stream-result-call/io.getstream.result.call/share.html","searchKeys":["share","fun <T : Any> Call<T>.share(scope: CoroutineScope, identifier: () -> Int): Call<T>","io.getstream.result.call.share"]},{"name":"fun <T : Any> Call<T>.withPrecondition(scope: CoroutineScope, precondition: suspend () -> Result<Unit>): Call<T>","description":"io.getstream.result.call.withPrecondition","location":"stream-result-call/io.getstream.result.call/with-precondition.html","searchKeys":["withPrecondition","fun <T : Any> Call<T>.withPrecondition(scope: CoroutineScope, precondition: suspend () -> Result<Unit>): Call<T>","io.getstream.result.call.withPrecondition"]},{"name":"fun <T : Any> callCanceledError(): Result<T>","description":"io.getstream.result.call.Call.Companion.callCanceledError","location":"stream-result-call/io.getstream.result.call/-call/-companion/call-canceled-error.html","searchKeys":["callCanceledError","fun <T : Any> callCanceledError(): Result<T>","io.getstream.result.call.Call.Companion.callCanceledError"]},{"name":"fun Call<*>.toUnitCall(): Call<Unit>","description":"io.getstream.result.call.toUnitCall","location":"stream-result-call/io.getstream.result.call/to-unit-call.html","searchKeys":["toUnitCall","fun Call<*>.toUnitCall(): Call<Unit>","io.getstream.result.call.toUnitCall"]},{"name":"fun interface Callback<T : Any>","description":"io.getstream.result.call.Call.Callback","location":"stream-result-call/io.getstream.result.call/-call/-callback/index.html","searchKeys":["Callback","fun interface Callback<T : Any>","io.getstream.result.call.Call.Callback"]},{"name":"fun originCall(): Call<T>","description":"io.getstream.result.call.DistinctCall.originCall","location":"stream-result-call/io.getstream.result.call/-distinct-call/origin-call.html","searchKeys":["originCall","fun originCall(): Call<T>","io.getstream.result.call.DistinctCall.originCall"]},{"name":"fun reset()","description":"io.getstream.result.call.dispatcher.CallDispatcherProvider.reset","location":"stream-result-call/io.getstream.result.call.dispatcher/-call-dispatcher-provider/reset.html","searchKeys":["reset","fun reset()","io.getstream.result.call.dispatcher.CallDispatcherProvider.reset"]},{"name":"fun set(mainDispatcher: CoroutineDispatcher, ioDispatcher: CoroutineDispatcher)","description":"io.getstream.result.call.dispatcher.CallDispatcherProvider.set","location":"stream-result-call/io.getstream.result.call.dispatcher/-call-dispatcher-provider/set.html","searchKeys":["set","fun set(mainDispatcher: CoroutineDispatcher, ioDispatcher: CoroutineDispatcher)","io.getstream.result.call.dispatcher.CallDispatcherProvider.set"]},{"name":"interface Call<T : Any>","description":"io.getstream.result.call.Call","location":"stream-result-call/io.getstream.result.call/-call/index.html","searchKeys":["Call","interface Call<T : Any>","io.getstream.result.call.Call"]},{"name":"interface RetryPolicy","description":"io.getstream.result.call.retry.RetryPolicy","location":"stream-result-call/io.getstream.result.call.retry/-retry-policy/index.html","searchKeys":["RetryPolicy","interface RetryPolicy","io.getstream.result.call.retry.RetryPolicy"]},{"name":"object CallDispatcherProvider","description":"io.getstream.result.call.dispatcher.CallDispatcherProvider","location":"stream-result-call/io.getstream.result.call.dispatcher/-call-dispatcher-provider/index.html","searchKeys":["CallDispatcherProvider","object CallDispatcherProvider","io.getstream.result.call.dispatcher.CallDispatcherProvider"]},{"name":"object Companion","description":"io.getstream.result.call.Call.Companion","location":"stream-result-call/io.getstream.result.call/-call/-companion/index.html","searchKeys":["Companion","object Companion","io.getstream.result.call.Call.Companion"]},{"name":"object Key : CoroutineContext.Key<SharedCalls> ","description":"io.getstream.result.call.SharedCalls.Key","location":"stream-result-call/io.getstream.result.call/-shared-calls/-key/index.html","searchKeys":["Key","object Key : CoroutineContext.Key<SharedCalls> ","io.getstream.result.call.SharedCalls.Key"]},{"name":"open fun enqueue()","description":"io.getstream.result.call.Call.enqueue","location":"stream-result-call/io.getstream.result.call/-call/enqueue.html","searchKeys":["enqueue","open fun enqueue()","io.getstream.result.call.Call.enqueue"]},{"name":"open override fun cancel()","description":"io.getstream.result.call.CoroutineCall.cancel","location":"stream-result-call/io.getstream.result.call/-coroutine-call/cancel.html","searchKeys":["cancel","open override fun cancel()","io.getstream.result.call.CoroutineCall.cancel"]},{"name":"open override fun cancel()","description":"io.getstream.result.call.DistinctCall.cancel","location":"stream-result-call/io.getstream.result.call/-distinct-call/cancel.html","searchKeys":["cancel","open override fun cancel()","io.getstream.result.call.DistinctCall.cancel"]},{"name":"open override fun cancel()","description":"io.getstream.result.call.ReturnOnErrorCall.cancel","location":"stream-result-call/io.getstream.result.call/-return-on-error-call/cancel.html","searchKeys":["cancel","open override fun cancel()","io.getstream.result.call.ReturnOnErrorCall.cancel"]},{"name":"open override fun enqueue(callback: Call.Callback<T>)","description":"io.getstream.result.call.CoroutineCall.enqueue","location":"stream-result-call/io.getstream.result.call/-coroutine-call/enqueue.html","searchKeys":["enqueue","open override fun enqueue(callback: Call.Callback<T>)","io.getstream.result.call.CoroutineCall.enqueue"]},{"name":"open override fun enqueue(callback: Call.Callback<T>)","description":"io.getstream.result.call.DistinctCall.enqueue","location":"stream-result-call/io.getstream.result.call/-distinct-call/enqueue.html","searchKeys":["enqueue","open override fun enqueue(callback: Call.Callback<T>)","io.getstream.result.call.DistinctCall.enqueue"]},{"name":"open override fun enqueue(callback: Call.Callback<T>)","description":"io.getstream.result.call.ReturnOnErrorCall.enqueue","location":"stream-result-call/io.getstream.result.call/-return-on-error-call/enqueue.html","searchKeys":["enqueue","open override fun enqueue(callback: Call.Callback<T>)","io.getstream.result.call.ReturnOnErrorCall.enqueue"]},{"name":"open override fun execute(): Result<T>","description":"io.getstream.result.call.CoroutineCall.execute","location":"stream-result-call/io.getstream.result.call/-coroutine-call/execute.html","searchKeys":["execute","open override fun execute(): Result<T>","io.getstream.result.call.CoroutineCall.execute"]},{"name":"open override fun execute(): Result<T>","description":"io.getstream.result.call.DistinctCall.execute","location":"stream-result-call/io.getstream.result.call/-distinct-call/execute.html","searchKeys":["execute","open override fun execute(): Result<T>","io.getstream.result.call.DistinctCall.execute"]},{"name":"open override fun execute(): Result<T>","description":"io.getstream.result.call.ReturnOnErrorCall.execute","location":"stream-result-call/io.getstream.result.call/-return-on-error-call/execute.html","searchKeys":["execute","open override fun execute(): Result<T>","io.getstream.result.call.ReturnOnErrorCall.execute"]},{"name":"open override val key: CoroutineContext.Key<SharedCalls>","description":"io.getstream.result.call.SharedCalls.key","location":"stream-result-call/io.getstream.result.call/-shared-calls/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<SharedCalls>","io.getstream.result.call.SharedCalls.key"]},{"name":"open suspend override fun await(): Result<T>","description":"io.getstream.result.call.CoroutineCall.await","location":"stream-result-call/io.getstream.result.call/-coroutine-call/await.html","searchKeys":["await","open suspend override fun await(): Result<T>","io.getstream.result.call.CoroutineCall.await"]},{"name":"open suspend override fun await(): Result<T>","description":"io.getstream.result.call.DistinctCall.await","location":"stream-result-call/io.getstream.result.call/-distinct-call/await.html","searchKeys":["await","open suspend override fun await(): Result<T>","io.getstream.result.call.DistinctCall.await"]},{"name":"open suspend override fun await(): Result<T>","description":"io.getstream.result.call.ReturnOnErrorCall.await","location":"stream-result-call/io.getstream.result.call/-return-on-error-call/await.html","searchKeys":["await","open suspend override fun await(): Result<T>","io.getstream.result.call.ReturnOnErrorCall.await"]},{"name":"suspend fun <T : Any> runCatching(errorMap: suspend (originalResultError: Result<T>) -> Result<T> = { it }, block: suspend () -> Result<T>): Result<T>","description":"io.getstream.result.call.Call.Companion.runCatching","location":"stream-result-call/io.getstream.result.call/-call/-companion/run-catching.html","searchKeys":["runCatching","suspend fun <T : Any> runCatching(errorMap: suspend (originalResultError: Result<T>) -> Result<T> = { it }, block: suspend () -> Result<T>): Result<T>","io.getstream.result.call.Call.Companion.runCatching"]},{"name":"val Immediate: CoroutineDispatcher","description":"io.getstream.result.call.dispatcher.CallDispatcherProvider.Immediate","location":"stream-result-call/io.getstream.result.call.dispatcher/-call-dispatcher-provider/-immediate.html","searchKeys":["Immediate","val Immediate: CoroutineDispatcher","io.getstream.result.call.dispatcher.CallDispatcherProvider.Immediate"]},{"name":"var IO: CoroutineDispatcher","description":"io.getstream.result.call.dispatcher.CallDispatcherProvider.IO","location":"stream-result-call/io.getstream.result.call.dispatcher/-call-dispatcher-provider/-i-o.html","searchKeys":["IO","var IO: CoroutineDispatcher","io.getstream.result.call.dispatcher.CallDispatcherProvider.IO"]},{"name":"var Main: CoroutineDispatcher","description":"io.getstream.result.call.dispatcher.CallDispatcherProvider.Main","location":"stream-result-call/io.getstream.result.call.dispatcher/-call-dispatcher-provider/-main.html","searchKeys":["Main","var Main: CoroutineDispatcher","io.getstream.result.call.dispatcher.CallDispatcherProvider.Main"]},{"name":"abstract val message: String","description":"io.getstream.result.StreamError.message","location":"stream-result/io.getstream.result/-stream-error/message.html","searchKeys":["message","abstract val message: String","io.getstream.result.StreamError.message"]},{"name":"annotation class StreamHandsOff(val reason: String)","description":"io.getstream.result.internal.StreamHandsOff","location":"stream-result/io.getstream.result.internal/-stream-hands-off/index.html","searchKeys":["StreamHandsOff","annotation class StreamHandsOff(val reason: String)","io.getstream.result.internal.StreamHandsOff"]},{"name":"const val UNKNOWN_STATUS_CODE: Int","description":"io.getstream.result.StreamError.NetworkError.Companion.UNKNOWN_STATUS_CODE","location":"stream-result/io.getstream.result/-stream-error/-network-error/-companion/-u-n-k-n-o-w-n_-s-t-a-t-u-s_-c-o-d-e.html","searchKeys":["UNKNOWN_STATUS_CODE","const val UNKNOWN_STATUS_CODE: Int","io.getstream.result.StreamError.NetworkError.Companion.UNKNOWN_STATUS_CODE"]},{"name":"constructor(message: String)","description":"io.getstream.result.StreamError.GenericError.GenericError","location":"stream-result/io.getstream.result/-stream-error/-generic-error/-generic-error.html","searchKeys":["GenericError","constructor(message: String)","io.getstream.result.StreamError.GenericError.GenericError"]},{"name":"constructor(message: String, cause: Throwable)","description":"io.getstream.result.StreamError.ThrowableError.ThrowableError","location":"stream-result/io.getstream.result/-stream-error/-throwable-error/-throwable-error.html","searchKeys":["ThrowableError","constructor(message: String, cause: Throwable)","io.getstream.result.StreamError.ThrowableError.ThrowableError"]},{"name":"constructor(message: String, streamCode: Int, statusCode: Int = UNKNOWN_STATUS_CODE, cause: Throwable? = null)","description":"io.getstream.result.StreamError.NetworkError.NetworkError","location":"stream-result/io.getstream.result/-stream-error/-network-error/-network-error.html","searchKeys":["NetworkError","constructor(message: String, streamCode: Int, statusCode: Int = UNKNOWN_STATUS_CODE, cause: Throwable? = null)","io.getstream.result.StreamError.NetworkError.NetworkError"]},{"name":"constructor(value: A)","description":"io.getstream.result.Result.Success.Success","location":"stream-result/io.getstream.result/-result/-success/-success.html","searchKeys":["Success","constructor(value: A)","io.getstream.result.Result.Success.Success"]},{"name":"constructor(value: StreamError)","description":"io.getstream.result.Result.Failure.Failure","location":"stream-result/io.getstream.result/-result/-failure/-failure.html","searchKeys":["Failure","constructor(value: StreamError)","io.getstream.result.Result.Failure.Failure"]},{"name":"data class Failure(val value: StreamError) : Result<Nothing> ","description":"io.getstream.result.Result.Failure","location":"stream-result/io.getstream.result/-result/-failure/index.html","searchKeys":["Failure","data class Failure(val value: StreamError) : Result<Nothing> ","io.getstream.result.Result.Failure"]},{"name":"data class GenericError(val message: String) : StreamError","description":"io.getstream.result.StreamError.GenericError","location":"stream-result/io.getstream.result/-stream-error/-generic-error/index.html","searchKeys":["GenericError","data class GenericError(val message: String) : StreamError","io.getstream.result.StreamError.GenericError"]},{"name":"data class NetworkError(val message: String, val streamCode: Int, val statusCode: Int = UNKNOWN_STATUS_CODE, val cause: Throwable? = null) : StreamError","description":"io.getstream.result.StreamError.NetworkError","location":"stream-result/io.getstream.result/-stream-error/-network-error/index.html","searchKeys":["NetworkError","data class NetworkError(val message: String, val streamCode: Int, val statusCode: Int = UNKNOWN_STATUS_CODE, val cause: Throwable? = null) : StreamError","io.getstream.result.StreamError.NetworkError"]},{"name":"data class Success<out A : Any>(val value: A) : Result<A> ","description":"io.getstream.result.Result.Success","location":"stream-result/io.getstream.result/-result/-success/index.html","searchKeys":["Success","data class Success<out A : Any>(val value: A) : Result<A> ","io.getstream.result.Result.Success"]},{"name":"data class ThrowableError(val message: String, val cause: Throwable) : StreamError","description":"io.getstream.result.StreamError.ThrowableError","location":"stream-result/io.getstream.result/-stream-error/-throwable-error/index.html","searchKeys":["ThrowableError","data class ThrowableError(val message: String, val cause: Throwable) : StreamError","io.getstream.result.StreamError.ThrowableError"]},{"name":"fun <A : Any> Result<A>.recover(errorMapper: (StreamError) -> A): Result.Success<A>","description":"io.getstream.result.recover","location":"stream-result/io.getstream.result/recover.html","searchKeys":["recover","fun <A : Any> Result<A>.recover(errorMapper: (StreamError) -> A): Result.Success<A>","io.getstream.result.recover"]},{"name":"fun StreamError.copyWithMessage(message: String): StreamError","description":"io.getstream.result.copyWithMessage","location":"stream-result/io.getstream.result/copy-with-message.html","searchKeys":["copyWithMessage","fun StreamError.copyWithMessage(message: String): StreamError","io.getstream.result.copyWithMessage"]},{"name":"fun StreamError.extractCause(): Throwable?","description":"io.getstream.result.extractCause","location":"stream-result/io.getstream.result/extract-cause.html","searchKeys":["extractCause","fun StreamError.extractCause(): Throwable?","io.getstream.result.extractCause"]},{"name":"fun getOrNull(): A?","description":"io.getstream.result.Result.getOrNull","location":"stream-result/io.getstream.result/-result/get-or-null.html","searchKeys":["getOrNull","fun getOrNull(): A?","io.getstream.result.Result.getOrNull"]},{"name":"fun getOrThrow(): A","description":"io.getstream.result.Result.getOrThrow","location":"stream-result/io.getstream.result/-result/get-or-throw.html","searchKeys":["getOrThrow","fun getOrThrow(): A","io.getstream.result.Result.getOrThrow"]},{"name":"fun streamErrorOrNull(): StreamError?","description":"io.getstream.result.Result.streamErrorOrNull","location":"stream-result/io.getstream.result/-result/stream-error-or-null.html","searchKeys":["streamErrorOrNull","fun streamErrorOrNull(): StreamError?","io.getstream.result.Result.streamErrorOrNull"]},{"name":"fun toUnitResult(): Result<Unit>","description":"io.getstream.result.Result.toUnitResult","location":"stream-result/io.getstream.result/-result/to-unit-result.html","searchKeys":["toUnitResult","fun toUnitResult(): Result<Unit>","io.getstream.result.Result.toUnitResult"]},{"name":"infix inline fun <T : Any, U : Any> Result<T>.then(f: (T) -> Result<U>): Result<U>","description":"io.getstream.result.then","location":"stream-result/io.getstream.result/then.html","searchKeys":["then","infix inline fun <T : Any, U : Any> Result<T>.then(f: (T) -> Result<U>): Result<U>","io.getstream.result.then"]},{"name":"inline fun <A : Any, C : Any> Result<A>.flatMap(f: (A) -> Result<C>): Result<C>","description":"io.getstream.result.flatMap","location":"stream-result/io.getstream.result/flat-map.html","searchKeys":["flatMap","inline fun <A : Any, C : Any> Result<A>.flatMap(f: (A) -> Result<C>): Result<C>","io.getstream.result.flatMap"]},{"name":"inline fun <C : Any> map(f: (A) -> C): Result<C>","description":"io.getstream.result.Result.map","location":"stream-result/io.getstream.result/-result/map.html","searchKeys":["map","inline fun <C : Any> map(f: (A) -> C): Result<C>","io.getstream.result.Result.map"]},{"name":"inline fun onError(crossinline errorSideEffect: (StreamError) -> Unit): Result<A>","description":"io.getstream.result.Result.onError","location":"stream-result/io.getstream.result/-result/on-error.html","searchKeys":["onError","inline fun onError(crossinline errorSideEffect: (StreamError) -> Unit): Result<A>","io.getstream.result.Result.onError"]},{"name":"inline fun onSuccess(crossinline successSideEffect: (A) -> Unit): Result<A>","description":"io.getstream.result.Result.onSuccess","location":"stream-result/io.getstream.result/-result/on-success.html","searchKeys":["onSuccess","inline fun onSuccess(crossinline successSideEffect: (A) -> Unit): Result<A>","io.getstream.result.Result.onSuccess"]},{"name":"inline suspend fun <A : Any, C : Any> Result<A>.flatMapSuspend(crossinline f: suspend (A) -> Result<C>): Result<C>","description":"io.getstream.result.flatMapSuspend","location":"stream-result/io.getstream.result/flat-map-suspend.html","searchKeys":["flatMapSuspend","inline suspend fun <A : Any, C : Any> Result<A>.flatMapSuspend(crossinline f: suspend (A) -> Result<C>): Result<C>","io.getstream.result.flatMapSuspend"]},{"name":"inline suspend fun <A : Any> Result<A>.onErrorSuspend(crossinline errorSideEffect: suspend (StreamError) -> Unit): Result<A>","description":"io.getstream.result.onErrorSuspend","location":"stream-result/io.getstream.result/on-error-suspend.html","searchKeys":["onErrorSuspend","inline suspend fun <A : Any> Result<A>.onErrorSuspend(crossinline errorSideEffect: suspend (StreamError) -> Unit): Result<A>","io.getstream.result.onErrorSuspend"]},{"name":"inline suspend fun <A : Any> Result<A>.onSuccessSuspend(crossinline successSideEffect: suspend (A) -> Unit): Result<A>","description":"io.getstream.result.onSuccessSuspend","location":"stream-result/io.getstream.result/on-success-suspend.html","searchKeys":["onSuccessSuspend","inline suspend fun <A : Any> Result<A>.onSuccessSuspend(crossinline successSideEffect: suspend (A) -> Unit): Result<A>","io.getstream.result.onSuccessSuspend"]},{"name":"inline suspend fun <A : Any> Result<A>.recoverSuspend(crossinline errorMapper: suspend (StreamError) -> A): Result.Success<A>","description":"io.getstream.result.recoverSuspend","location":"stream-result/io.getstream.result/recover-suspend.html","searchKeys":["recoverSuspend","inline suspend fun <A : Any> Result<A>.recoverSuspend(crossinline errorMapper: suspend (StreamError) -> A): Result.Success<A>","io.getstream.result.recoverSuspend"]},{"name":"inline suspend fun <C : Any> mapSuspend(crossinline f: suspend (A) -> C): Result<C>","description":"io.getstream.result.Result.mapSuspend","location":"stream-result/io.getstream.result/-result/map-suspend.html","searchKeys":["mapSuspend","inline suspend fun <C : Any> mapSuspend(crossinline f: suspend (A) -> C): Result<C>","io.getstream.result.Result.mapSuspend"]},{"name":"object Companion","description":"io.getstream.result.StreamError.NetworkError.Companion","location":"stream-result/io.getstream.result/-stream-error/-network-error/-companion/index.html","searchKeys":["Companion","object Companion","io.getstream.result.StreamError.NetworkError.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.getstream.result.StreamError.NetworkError.equals","location":"stream-result/io.getstream.result/-stream-error/-network-error/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.getstream.result.StreamError.NetworkError.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.getstream.result.StreamError.ThrowableError.equals","location":"stream-result/io.getstream.result/-stream-error/-throwable-error/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.getstream.result.StreamError.ThrowableError.equals"]},{"name":"open override fun hashCode(): Int","description":"io.getstream.result.StreamError.NetworkError.hashCode","location":"stream-result/io.getstream.result/-stream-error/-network-error/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.getstream.result.StreamError.NetworkError.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.getstream.result.StreamError.ThrowableError.hashCode","location":"stream-result/io.getstream.result/-stream-error/-throwable-error/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.getstream.result.StreamError.ThrowableError.hashCode"]},{"name":"open override val message: String","description":"io.getstream.result.StreamError.GenericError.message","location":"stream-result/io.getstream.result/-stream-error/-generic-error/message.html","searchKeys":["message","open override val message: String","io.getstream.result.StreamError.GenericError.message"]},{"name":"open override val message: String","description":"io.getstream.result.StreamError.NetworkError.message","location":"stream-result/io.getstream.result/-stream-error/-network-error/message.html","searchKeys":["message","open override val message: String","io.getstream.result.StreamError.NetworkError.message"]},{"name":"open override val message: String","description":"io.getstream.result.StreamError.ThrowableError.message","location":"stream-result/io.getstream.result/-stream-error/-throwable-error/message.html","searchKeys":["message","open override val message: String","io.getstream.result.StreamError.ThrowableError.message"]},{"name":"sealed class Result<out A : Any>","description":"io.getstream.result.Result","location":"stream-result/io.getstream.result/-result/index.html","searchKeys":["Result","sealed class Result<out A : Any>","io.getstream.result.Result"]},{"name":"sealed class StreamError","description":"io.getstream.result.StreamError","location":"stream-result/io.getstream.result/-stream-error/index.html","searchKeys":["StreamError","sealed class StreamError","io.getstream.result.StreamError"]},{"name":"val cause: Throwable","description":"io.getstream.result.StreamError.ThrowableError.cause","location":"stream-result/io.getstream.result/-stream-error/-throwable-error/cause.html","searchKeys":["cause","val cause: Throwable","io.getstream.result.StreamError.ThrowableError.cause"]},{"name":"val cause: Throwable? = null","description":"io.getstream.result.StreamError.NetworkError.cause","location":"stream-result/io.getstream.result/-stream-error/-network-error/cause.html","searchKeys":["cause","val cause: Throwable? = null","io.getstream.result.StreamError.NetworkError.cause"]},{"name":"val isFailure: Boolean","description":"io.getstream.result.Result.isFailure","location":"stream-result/io.getstream.result/-result/is-failure.html","searchKeys":["isFailure","val isFailure: Boolean","io.getstream.result.Result.isFailure"]},{"name":"val isSuccess: Boolean","description":"io.getstream.result.Result.isSuccess","location":"stream-result/io.getstream.result/-result/is-success.html","searchKeys":["isSuccess","val isSuccess: Boolean","io.getstream.result.Result.isSuccess"]},{"name":"val reason: String","description":"io.getstream.result.internal.StreamHandsOff.reason","location":"stream-result/io.getstream.result.internal/-stream-hands-off/reason.html","searchKeys":["reason","val reason: String","io.getstream.result.internal.StreamHandsOff.reason"]},{"name":"val statusCode: Int","description":"io.getstream.result.StreamError.NetworkError.statusCode","location":"stream-result/io.getstream.result/-stream-error/-network-error/status-code.html","searchKeys":["statusCode","val statusCode: Int","io.getstream.result.StreamError.NetworkError.statusCode"]},{"name":"val streamCode: Int","description":"io.getstream.result.StreamError.NetworkError.streamCode","location":"stream-result/io.getstream.result/-stream-error/-network-error/stream-code.html","searchKeys":["streamCode","val streamCode: Int","io.getstream.result.StreamError.NetworkError.streamCode"]},{"name":"val value: A","description":"io.getstream.result.Result.Success.value","location":"stream-result/io.getstream.result/-result/-success/value.html","searchKeys":["value","val value: A","io.getstream.result.Result.Success.value"]},{"name":"val value: StreamError","description":"io.getstream.result.Result.Failure.value","location":"stream-result/io.getstream.result/-result/-failure/value.html","searchKeys":["value","val value: StreamError","io.getstream.result.Result.Failure.value"]}]