public abstract class io/getstream/result/Result {
	public final fun getOrNull ()Ljava/lang/Object;
	public final fun getOrThrow ()Ljava/lang/Object;
	public final fun isFailure ()Z
	public final fun isSuccess ()Z
	public final fun map (Lkotlin/jvm/functions/Function1;)Lio/getstream/result/Result;
	public final synthetic fun mapSuspend (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onError (Lkotlin/jvm/functions/Function1;)Lio/getstream/result/Result;
	public final fun onSuccess (Lkotlin/jvm/functions/Function1;)Lio/getstream/result/Result;
	public final fun streamErrorOrNull ()Lio/getstream/result/StreamError;
	public final fun toUnitResult ()Lio/getstream/result/Result;
}

public final class io/getstream/result/Result$Failure : io/getstream/result/Result {
	public fun <init> (Lio/getstream/result/StreamError;)V
	public final fun component1 ()Lio/getstream/result/StreamError;
	public final fun copy (Lio/getstream/result/StreamError;)Lio/getstream/result/Result$Failure;
	public static synthetic fun copy$default (Lio/getstream/result/Result$Failure;Lio/getstream/result/StreamError;ILjava/lang/Object;)Lio/getstream/result/Result$Failure;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Lio/getstream/result/StreamError;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/result/Result$Success : io/getstream/result/Result {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lio/getstream/result/Result$Success;
	public static synthetic fun copy$default (Lio/getstream/result/Result$Success;Ljava/lang/Object;ILjava/lang/Object;)Lio/getstream/result/Result$Success;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/result/ResultKt {
	public static final fun flatMap (Lio/getstream/result/Result;Lkotlin/jvm/functions/Function1;)Lio/getstream/result/Result;
	public static final synthetic fun flatMapSuspend (Lio/getstream/result/Result;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun onErrorSuspend (Lio/getstream/result/Result;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun onSuccessSuspend (Lio/getstream/result/Result;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun recover (Lio/getstream/result/Result;Lkotlin/jvm/functions/Function1;)Lio/getstream/result/Result$Success;
	public static final synthetic fun recoverSuspend (Lio/getstream/result/Result;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun then (Lio/getstream/result/Result;Lkotlin/jvm/functions/Function1;)Lio/getstream/result/Result;
}

public abstract class io/getstream/result/StreamError {
	public abstract fun getMessage ()Ljava/lang/String;
}

public final class io/getstream/result/StreamError$GenericError : io/getstream/result/StreamError {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/getstream/result/StreamError$GenericError;
	public static synthetic fun copy$default (Lio/getstream/result/StreamError$GenericError;Ljava/lang/String;ILjava/lang/Object;)Lio/getstream/result/StreamError$GenericError;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/result/StreamError$NetworkError : io/getstream/result/StreamError {
	public static final field Companion Lio/getstream/result/StreamError$NetworkError$Companion;
	public static final field UNKNOWN_STATUS_CODE I
	public fun <init> (Ljava/lang/String;IILjava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;IILjava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()Ljava/lang/Throwable;
	public final fun copy (Ljava/lang/String;IILjava/lang/Throwable;)Lio/getstream/result/StreamError$NetworkError;
	public static synthetic fun copy$default (Lio/getstream/result/StreamError$NetworkError;Ljava/lang/String;IILjava/lang/Throwable;ILjava/lang/Object;)Lio/getstream/result/StreamError$NetworkError;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCause ()Ljava/lang/Throwable;
	public fun getMessage ()Ljava/lang/String;
	public final fun getStatusCode ()I
	public final fun getStreamCode ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/result/StreamError$NetworkError$Companion {
}

public final class io/getstream/result/StreamError$ThrowableError : io/getstream/result/StreamError {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Throwable;
	public final fun copy (Ljava/lang/String;Ljava/lang/Throwable;)Lio/getstream/result/StreamError$ThrowableError;
	public static synthetic fun copy$default (Lio/getstream/result/StreamError$ThrowableError;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lio/getstream/result/StreamError$ThrowableError;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCause ()Ljava/lang/Throwable;
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/result/StreamErrorKt {
	public static final fun copyWithMessage (Lio/getstream/result/StreamError;Ljava/lang/String;)Lio/getstream/result/StreamError;
	public static final fun extractCause (Lio/getstream/result/StreamError;)Ljava/lang/Throwable;
}

public abstract interface annotation class io/getstream/result/internal/StreamHandsOff : java/lang/annotation/Annotation {
	public abstract fun reason ()Ljava/lang/String;
}

